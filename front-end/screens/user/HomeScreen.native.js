// screens/HomeScreen.js
import React from "react";
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  ScrollView,
  Dimensions, // V·∫´n c·∫ßn Dimensions ƒë·ªÉ l·∫•y width
  Alert,
  Platform, // Import Platform for conditional styling
  SafeAreaView, // Use SafeAreaView for better handling of notches/status bar
} from "react-native";
import { useNavigation } from "@react-navigation/native";
import { Ionicons } from "@expo/vector-icons";
import { useAuth } from "../../context/AuthContext";

const { width } = Dimensions.get("window"); // L·∫•y chi·ªÅu r·ªông m√†n h√¨nh ·ªü ngo√†i component

export default function HomeScreen() {
  const navigation = useNavigation();
  const { logout } = useAuth();

  // Ki·ªÉm tra k√≠ch th∆∞·ªõc m√†n h√¨nh ƒë·ªÉ ƒëi·ªÅu ch·ªânh b·ªë c·ª•c
  // Bi·∫øn n√†y ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a trong ph·∫°m vi c·ªßa component
  const isLargeScreen = width > 768;

  const navigateToScreen = (screenName) => {
    navigation.navigate(screenName);
  };

  const handleLogout = () => {
    Alert.alert(
      "X√°c nh·∫≠n ƒëƒÉng xu·∫•t",
      "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t kh·ªèi ·ª©ng d·ª•ng?",
      [
        {
          text: "H·ªßy",
          style: "cancel",
        },
        {
          text: "ƒêƒÉng xu·∫•t",
          onPress: () => logout(), // G·ªçi h√†m logout t·ª´ AuthContext
          style: "destructive",
        },
      ],
      { cancelable: true }
    );
  };

  return (
    <SafeAreaView style={styles.safeArea}>
      <ScrollView contentContainerStyle={styles.scrollContent}>
        {/* Header Section */}
        <View style={styles.header}>
          <Text style={styles.welcomeText}>Ch√†o m·ª´ng b·∫°n üëã</Text>
          <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>
            <Ionicons name="log-out-outline" size={20} color="#fff" />
            {/* <Text style={styles.logoutButtonText}>ƒêƒÉng xu·∫•t</Text> */}
          </TouchableOpacity>
        </View>

        {/* Feature Cards Grid */}
        {/* S·ª≠ d·ª•ng style responsive d·ª±a tr√™n isLargeScreen */}
        <View
          style={
            isLargeScreen ? styles.gridContainerWide : styles.gridContainer
          }
        >
          {/* Card: B·∫£n ƒë·ªì Hi·ªán tr·∫°ng */}
          <TouchableOpacity
            // √Åp d·ª•ng style 'card' v√† th√™m style cho width d·ª±a tr√™n isLargeScreen
            style={[styles.card, { width: isLargeScreen ? "48%" : "100%" }]}
            onPress={() => navigateToScreen("CurrentStatusMap")}
          >
            <View style={styles.iconCircle}>
              <Ionicons name="map-outline" size={40} color="#007BFF" />
            </View>
            <Text style={styles.cardTitle}>B·∫£n ƒë·ªì Hi·ªán tr·∫°ng</Text>
            <Text style={styles.cardDescription}>
              T√¨m ƒë∆∞·ªùng, xem t√¨nh h√¨nh giao th√¥ng v√† s·ª± c·ªë theo th·ªùi gian th·ª±c.
            </Text>
          </TouchableOpacity>

          {/* Card: B·∫£n ƒë·ªì M√¥ ph·ªèng */}
          <TouchableOpacity
            style={[styles.card, { width: isLargeScreen ? "48%" : "100%" }]}
            onPress={() => navigateToScreen("SimulationMap")}
          >
            <View style={styles.iconCircle}>
              <Ionicons name="analytics-outline" size={40} color="#007BFF" />
            </View>
            <Text style={styles.cardTitle}>B·∫£n ƒë·ªì M√¥ ph·ªèng</Text>
            <Text style={styles.cardDescription}>
              Ph√¢n t√≠ch v√† d·ª± ƒëo√°n giao th√¥ng d·ª±a tr√™n d·ªØ li·ªáu gi·∫£ l·∫≠p.
            </Text>
          </TouchableOpacity>

          {/* Card: Th√¥ng tin & H·ªó tr·ª£ */}
          <TouchableOpacity
            style={[styles.card, { width: isLargeScreen ? "48%" : "100%" }]}
            onPress={() =>
              Alert.alert(
                "Th√¥ng tin & H·ªó tr·ª£",
                "Cung c·∫•p th√¥ng tin t·ªïng quan v·ªÅ ·ª©ng d·ª•ng, h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng v√† c√°ch li√™n h·ªá h·ªó tr·ª£."
              )
            }
          >
            <View style={styles.iconCircle}>
              <Ionicons
                name="information-circle-outline"
                size={40}
                color="#007BFF"
              />
            </View>
            <Text style={styles.cardTitle}>Th√¥ng tin & H·ªó tr·ª£</Text>
            <Text style={styles.cardDescription}>
              C√°c t√≠nh nƒÉng kh√°c, h∆∞·ªõng d·∫´n v√† h·ªó tr·ª£ ng∆∞·ªùi d√πng.
            </Text>
          </TouchableOpacity>

          {/* Card: C√†i ƒë·∫∑t C√° nh√¢n */}
          <TouchableOpacity
            style={[styles.card, { width: isLargeScreen ? "48%" : "100%" }]}
            onPress={() => navigateToScreen("PersonalInfo")}
          >
            <View style={styles.iconCircle}>
              <Ionicons
                name="person-circle-outline"
                size={40}
                color="#007BFF"
              />
            </View>
            <Text style={styles.cardTitle}>C√†i ƒë·∫∑t C√° nh√¢n</Text>
            <Text style={styles.cardDescription}>
              Qu·∫£n l√Ω h·ªì s∆°, s·ªü th√≠ch v√† t√πy ch·ªânh ·ª©ng d·ª•ng c·ªßa b·∫°n.
            </Text>
          </TouchableOpacity>
        </View>

        {/* Footer ho·∫∑c th√¥ng tin th√™m */}
        <View style={styles.footer}>
          <Text style={styles.footerText}>
            ¬© 2025 WayGenie. All rights reserved.
          </Text>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: "#eef2f6", // M√†u n·ªÅn nh·∫π nh√†ng
  },
  scrollContent: {
    flexGrow: 1,
    paddingTop: Platform.OS === "android" ? 30 : 20, // Padding cho status bar
    paddingHorizontal: 20,
    alignItems: "center",
  },
  header: {
    width: "100%",
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: 40,
    paddingBottom: 10,
    borderBottomWidth: 0, // Kh√¥ng c√≤n ƒë∆∞·ªùng k·∫ª d∆∞·ªõi
    borderBottomColor: "#ddd",
  },
  welcomeText: {
    fontSize: 28,
    fontWeight: "700",
    color: "#2c3e50", // M√†u ch·ªØ ƒë·∫≠m h∆°n
  },
  logoutButton: {
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "#e74c3c", // M√†u ƒë·ªè cam
    paddingVertical: 10,
    paddingHorizontal: 18,
    borderRadius: 25, // Bo tr√≤n nhi·ªÅu h∆°n
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 3,
    elevation: 3,
  },
  logoutButtonText: {
    color: "white",
    fontWeight: "600",
    fontSize: 16,
    marginLeft: 8,
  },
  // Grid cho m√†n h√¨nh nh·ªè (1 c·ªôt)
  gridContainer: {
    width: "100%",
    alignItems: "center",
  },
  // Grid cho m√†n h√¨nh l·ªõn (2 c·ªôt)
  gridContainerWide: {
    width: "100%",
    flexDirection: "row",
    flexWrap: "wrap",
    justifyContent: "space-between", // Kho·∫£ng c√°ch gi·ªØa c√°c th·∫ª
  },
  card: {
    backgroundColor: "#ffffff", // N·ªÅn th·∫ª tr·∫Øng
    borderRadius: 20, // Bo tr√≤n g√≥c nhi·ªÅu h∆°n
    padding: 25,
    marginBottom: 20,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 6 },
    shadowOpacity: 0.1,
    shadowRadius: 10,
    elevation: 8,
  },
  iconCircle: {
    backgroundColor: "#e0f7fa", // N·ªÅn m√†u xanh nh·∫°t cho bi·ªÉu t∆∞·ª£ng
    borderRadius: 30,
    width: 60,
    height: 60,
    justifyContent: "center",
    alignItems: "center",
    marginBottom: 15,
  },
  cardTitle: {
    fontSize: 20,
    fontWeight: "700",
    color: "#34495e", // M√†u ch·ªØ ƒë·∫≠m
    marginBottom: 5,
  },
  cardDescription: {
    fontSize: 14,
    color: "#7f8c8d", // M√†u ch·ªØ x√°m nh·∫°t
    lineHeight: 20,
  },
  footer: {
    marginTop: 40,
    marginBottom: 20,
    width: "100%",
    alignItems: "center",
  },
  footerText: {
    fontSize: 12,
    color: "#95a5a6",
  },
});
